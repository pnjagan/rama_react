use create-create-app for the setup.


yarn add typeface-roboto 
yarn add  @material-ui/core


yarn add @material-ui/icons

======================================
should use older version of "@date-io/date-fns": "1.3.6",

Install using :
yarn add @date-io/date-fns@1.3.6 --exact
====================================================
UI Ideas discussed with Meenakshi:
-----------------------------------------
Textfield
Dropdown
Checkbox
Button
Labels
DATE Input
---------------------------------------------------
LOV-search : Is mandatory, find out a way to refer a record-group from the backend
Slide and Switch are getting popular as they are easier to handle in mobile and touch screen
Transfer is still rarely used.
----------------------------------------------------
Heading
TextArea
Instructions
MultiSelect - [Chip is not a good idea - but moving selected fields to the TOP is a good idea.]
              Showing selected items as a LIST below is also a good idea.
-----------------------------
Layouts:
----------
row
single column
double column
Tabs
DIalogs
Menu

--------------------------------------------------------------
use media query in JavaScript.
Build 2 layouts:
Desktop and mobile
At the most , 3 - Desktop, mobile and TAB
-----------------------------
Handling Tables - Refresh and pagination are mandatory
Table selections are key
Edit , download and more details are nowadays implemented as a hover links, rather than as action buttons
---------------------------------------------
git config --local diff.tool diffuse
git config --local merge.tool diffuse
git config --local --add difftool.prompt false
----------------------------------------------------------
installing react-redux and sagas
--------------------------------------------
HTTPS is easier to setup
Password is added to Global git creds
---
jagannathan@jagannathan-Inspiron-3593:~$ more .git-credentials 
https://pnjagan%40gmail.com:Rama%24123@github.com
-------------------------------------------

https://hackernoon.com/redux-saga-tutorial-for-beginners-and-dog-lovers-aa69a17db645

yarn add react-redux
yarn add redux-saga
yarn add axios

Component Vs Container is no longer valid with hooks.

organizing tips copied from https://decembersoft.com/posts/4-tips-for-managing-many-sagas-in-a-react-redux-saga-app/
---------------

2 ideas:
---------
Action creators can be auto generated using this helper:
https://redux.js.org/recipes/reducing-boilerplate

function makeActionCreator(type, ...argNames) {
  return function(...args) {
    const action = { type }
    argNames.forEach((arg, index) => {
      action[argNames[index]] = args[index]
    })
    return action
  }
}

Reducers can also be auto generated.
-----------------------------------------
Provided convetion is followed for store-key
data and data-status

there is a problem in action type.
It is quite FLAT.
WHy not distinguish action meant for Reducer as R_ , Sagas as M_ , and both as MR_

<ENTITY name> - should be 1-1 mapping with reducer or middleware.

reducer should just merge the payload into the store.
It should not be doing anything more than that => can be automated with minimal boiler plate code

middleware should either push or pull data from the server.
action could either be data_request -
 GET methods - <MR>_<ENTITY>_<SUB.ENT>_<CR/UPD/GET/DEL/MISC>
CREATE - POST
/Update - PUT0
Delete - DEL 
--------------------------------------------------------
One round of actions

UI
M_USER_GET

MW fires
R_USER_META to update request status

MW fires
R_USER_META to update request status and/or data

----------------------
UI updates the record
M_USER_PUT

MW_fires
R_USER_META

--------------------------------------------------------------
Meta status
 ->INITIAL
 ->GET_IN_PROGRESS
 ->READY
 ->UPDATE_IN_PROGRESS
 ->UPDATE_FAILED
 ->GET_FAILED
-------------------------------------------------------------------
Action FORMAT
---------------
{
  type : <>
  payload : {

  }
}
----------------------------------
action creator convention
mUserGet
mUserPut
mUserPost
rUserMeta
-------------------------------------------

-----------------------------------------------
yarn add object-inspect

Good explanation for useEffect
https://daveceddia.com/useeffect-hook-examples/
---------------------------------------------------------
dead-simple-color-utils - Junk library
----------------------------------------------------------

STORE structure:
---------------
{
  data: {
    loggedUser:''
  },
  meta :{
      status: 'NOT_REQUESTED',
      message: ''
  }
}
----------------------------------------------------
https://kentcdodds.com/blog/dont-call-a-react-function-component